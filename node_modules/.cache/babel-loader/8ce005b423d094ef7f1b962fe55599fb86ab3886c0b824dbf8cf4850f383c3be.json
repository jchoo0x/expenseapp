{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jchoo\\\\Desktop\\\\VS Code\\\\expenseapp\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  _s();\n  // ExpenseDate is splitted from ExpenseItem -> There is no hard rule for splitting but\n  // the more the code becomes complex, the more the components become splitted\n  const [title, setTitle] = useState(props.title);\n  // useState always returns an array with exactly two elements\n  // first element: current state value\n  // second element: the function that updates the value\n\n  const clickHandler = () => {\n    setTitle(\"Updated!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$\", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Change Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["useState","ExpenseDate","Card","jsxDEV","_jsxDEV","ExpenseItem","props","_s","title","setTitle","clickHandler","children","className","date","fileName","_jsxFileName","lineNumber","columnNumber","amount","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jchoo/Desktop/VS Code/expenseapp/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  // ExpenseDate is splitted from ExpenseItem -> There is no hard rule for splitting but\r\n  // the more the code becomes complex, the more the components become splitted\r\n  const [title, setTitle] = useState(props.title);\r\n  // useState always returns an array with exactly two elements\r\n  // first element: current state value\r\n  // second element: the function that updates the value\r\n\r\n  const clickHandler = () => {\r\n    setTitle(\"Updated!\");\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}>Change Title</button>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAACE,KAAK,CAAC;EAC/C;EACA;EACA;;EAEA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,oBACEL,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACF,IAAI;MAACU,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC5BP,OAAA,CAACH,WAAW;QAACY,IAAI,EAAEP,KAAK,CAACO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCb,OAAA;QAAKQ,SAAS,EAAC,2BAA2B;QAAAD,QAAA,gBACxCP,OAAA;UAAAO,QAAA,EAAKL,KAAK,CAACE;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBb,OAAA;UAAKQ,SAAS,EAAC,qBAAqB;UAAAD,QAAA,GAAC,GAAC,EAACL,KAAK,CAACY,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACNb,OAAA;QAAQe,OAAO,EAAET,YAAa;QAAAC,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAET;AAACV,EAAA,CAxBQF,WAAW;AAAAe,EAAA,GAAXf,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}